{"version":3,"sources":["script.js"],"names":["addButton","document","getElementsByTagName","itemsSection","getElementsByClassName","itemName","addEventListener","doneItemsSection","addItem","pressButton","e","target","tagName","parentNode","button","targetItem","checkButton","firstElementChild","delButton","hideAnimation","showTitle","whereToMove","targetSection","nextElementSibling","appendChild","classList","contains","textContent","divNode","createElement","className","concat","value","style","opacity","insertBefore","firstChild","animate","boolean","startTime","Date","getTime","newOpacity","diffSpeed","requestAnimationFrame","func","doneTitle","titleClass","remove","add"],"mappings":"aAAA,IAAIA,UAAYC,SAASC,qBAAqB,UAAU,GACpDC,aAAeF,SAASG,uBAAuB,SAAS,GADxDJ,iBAAYC,SAASC,uBAAT,cAA4C,GAGxDG,SAAWJ,SAASC,qBAAqB,SAAS,GAFlDC,UAAYF,SAAGA,qBAASG,MAAuB,GAUnDD,SAAAA,WAAaG,GACG,UAAhBC,EAAAA,KAMIC,UACD,SAAAC,YAAAC,GAKD,GAAyB,SAArBA,EAAEC,OAAOC,QAAb,CAAA,IAAIF,EAASE,EAAAA,OAATC,WAEAC,EAAWH,EAAOE,WAClBE,EAAaD,EAAOD,WAGpBG,EAAcD,EAAWb,qBAAqB,UAAU,GAAGe,kBAC3DC,EAAYH,EAAWb,qBAAqB,UAAU,GAAGe,kBAE7D,OAAQP,EAAEC,QAEV,KAAAO,EAAgBC,cAAAJ,EAAA,WACdI,EAAAA,SACEJ,cACAK,GAEH,MAID,KAAKJ,EAAL,IAAAK,EACEA,EADgBC,EAAAC,mBACZF,EAAJE,mBACID,EAAcC,uBAGhBF,cAAAA,EAAcC,WACfD,EACDG,YAAAT,GAGEK,YAFFD,EAAAA,UAAcJ,OAAAA,aAMRD,EAAOW,UAAUC,SAAS,aAJ9BN,EAAAA,kBACAO,YAAA,0BACAb,EAAAA,kBAAAa,YAAA,YAGEb,cAAOG,EAAAA,cAAkBU,KAC1B,KAMJ,SAAAnB,UACCH,SAAAJ,SAAAC,qBAAA,SAAA,GAIJ,IAAA0B,EAAA3B,SAAA4B,cAAA,OAKED,EAAQE,UAAY,OAJtBF,EAASpB,UAAT,mJAAAuB,OASgC1B,SAAS2B,MATzC,oGAcEJ,EAAQK,MAAMC,QAAU,EAExBf,aAAagB,aAAUP,EAAMzB,aAA7BiC,YACA/B,cAAAuB,EAAqB,cAAA,GAIvBvB,SAAA2B,MAAA,GASE,SAAIK,cAAU1B,EAAV0B,EAAgBC,GAElB,IAAAC,GAAA,IAAAC,MAAAC,WAFY,SAAVJ,IAKF,IACEK,EADFC,IAAa,IAAAH,MAAAC,UAENF,GAAA,IAAA,GADLG,EAGDJ,EAHc,EAAIK,EAMbA,GAGGC,GAAsBP,EAAtBO,EACRC,KAFClC,EAAOsB,MAAMC,QAAUQ,EAI3BL,OAAOO,sBAAAP,IAAPA,GAOA,SAAIS,YAEFC,IAAAA,EAAWC,UAAXvB,UAGAsB,UAAWE,oBACZF,EAAArB,SAAA,QACFqB,EAAAC,OAAA,QAJaF,UAAUvB,oBACnBwB,EAAWrB,SAAS,SACrBqB,EAAWE,IAAI,QAjInBjD,UAAIK,iBAAoBH,QAAAA,SACxBG,SAAIyC,iBAAqB5C,WAAAA,YAOzBC,aAAaG,iBAAiB,QAASG,aAJvCT,iBAAUM,iBAAV,QAAAG","file":"script.min.js","sourcesContent":["let addButton = document.getElementsByTagName('button')[0]; // button for adding new items\r\nlet itemsSection = document.getElementsByClassName('items')[0]; // section with items\r\nlet doneItemsSection = document.getElementsByClassName('done-items')[0];\r\nlet itemName = document.getElementsByTagName('input')[1]; // name of item\r\nlet doneTitle = document.getElementsByTagName('h2')[0]; //'Completed items'\r\n\r\n// Create new todo item when press \"+\" button\r\naddButton.addEventListener('click', addItem);\r\n// Create new todo item when press \"Enter key\"\r\nitemName.addEventListener('keypress', pressEnter);\r\n// When press 'check' or 'delete' button\r\nitemsSection.addEventListener('click', pressButton);\r\ndoneItemsSection.addEventListener('click', pressButton);\r\n\r\n// ------------------FUNCTIONS\r\n\r\nfunction pressEnter(e) {\r\n  if (e.key === 'Enter') {\r\n    addItem();\r\n  }\r\n}\r\n\r\nfunction pressButton(e) {\r\n\r\n  if (e.target.tagName !== \"SPAN\") return;\r\n\r\n  let button = e.target.parentNode;\r\n  let targetItem = button.parentNode;\r\n  let targetSection = targetItem.parentNode;\r\n\r\n  let checkButton = targetItem.getElementsByTagName('button')[0].firstElementChild;\r\n  let delButton = targetItem.getElementsByTagName('button')[1].firstElementChild;\r\n\r\n  switch (e.target) {\r\n  // when press 'delete button'\r\n  case delButton: {\r\n    hideAnimation(targetItem, () => {\r\n      targetItem.remove();\r\n      showTitle();\r\n    }, true);\r\n  }\r\n    break;\r\n\r\n    // when press 'check or uncheck button'\r\n  case checkButton: {\r\n    let whereToMove;\r\n    if (targetSection.nextElementSibling) {\r\n      whereToMove = targetSection.nextElementSibling; //check items\r\n    } else {\r\n      whereToMove = targetSection.previousElementSibling; //uncheck items\r\n    }\r\n    //hide item before moving\r\n    hideAnimation(targetItem, () => {\r\n      whereToMove.appendChild(targetItem); // move item\r\n      showTitle();\r\n      // decorate check button\r\n      button.classList.toggle('unchecked');\r\n\r\n      if (button.classList.contains('unchecked')) {\r\n        button.firstElementChild.textContent = 'check_box_outline_blank';\r\n      } else {\r\n        button.firstElementChild.textContent = 'check_box';\r\n      }\r\n      //show item after moving\r\n      hideAnimation(targetItem, () => {}, false);\r\n    }, true);\r\n  }\r\n    break;\r\n  }\r\n}\r\n\r\n// Create new todo item\r\nfunction addItem() {\r\n  itemName = document.getElementsByTagName('input')[1];\r\n\r\n  let divNode = document.createElement('DIV'); // create div for new item\r\n  divNode.className = 'item';\r\n\r\n  divNode.innerHTML = `<button class=\"btn unchecked\">\r\n      <span class=\"material-icons\">check_box_outline_blank</span>\r\n    </button>\r\n    <input type=\"text\" value=\"${itemName.value}\">\r\n    <button class=\"btn del\">\r\n      <span class=\"material-icons\">clear</span>\r\n    </button>`;\r\n\r\n  divNode.style.opacity = 0;\r\n  itemsSection.insertBefore(divNode, itemsSection.firstChild); // paste new item as a first child\r\n  hideAnimation(divNode, () => {}, false);\r\n  itemName.value = \"\"; //reset a field for adding item's name\r\n}\r\n\r\n\r\n// hide or unhide animation\r\n// @target - DOM element which would be hidden or unhidden\r\n// @func - function that would be called after hideAnimation\r\n// boolean - 'true' - hide, 'false' - unhide\r\n\r\nfunction hideAnimation(target, func, boolean) {\r\n\r\n  let startTime = new Date().getTime();\r\n\r\n  let animate = () => {\r\n    let currTime = new Date().getTime();\r\n    let newOpacity;\r\n    let diffSpeed = ((currTime - startTime) / 1000) * 2;\r\n\r\n    if (boolean) {\r\n      newOpacity = 1 - diffSpeed;\r\n    } else {\r\n      newOpacity = diffSpeed;\r\n    }\r\n\r\n    if (newOpacity < 0 || newOpacity > 1) {\r\n      func();\r\n    } else {\r\n      target.style.opacity = newOpacity;\r\n      window.requestAnimationFrame(animate);\r\n    }\r\n  };\r\n  animate();\r\n}\r\n\r\n// check if there are completed items so can show title for them\r\nfunction showTitle() {\r\n  let titleClass = doneTitle.classList;\r\n\r\n  if (doneTitle.nextElementSibling &&\r\n    titleClass.contains('hide')) {\r\n    titleClass.remove('hide');\r\n  } else if (!doneTitle.nextElementSibling &&\r\n    !titleClass.contains('hide')) {\r\n    titleClass.add('hide');\r\n  }\r\n}\r\n"]}